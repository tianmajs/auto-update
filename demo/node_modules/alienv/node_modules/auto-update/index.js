var fs = require('fs'),
	path = require('path'),
	http = require('http'),
	exec = require('child_process').exec;

var pkg = (function find(dir) {
	var pkg = path.join(dir, 'package.json'),
		parent;
	
	if (fs.existsSync(pkg)) {
		return require(pkg);
	} else {
		parent = path.join(dir, '../');
		
		if (parent === dir) {
			throw new Error('package.json not found');
		} else {
			return find(parent);
		}
	}

}(path.dirname(module.parent.filename)));

module.exports = function (callback) {
	http.get('http://registry.npmjs.org/' + pkg.name, function (res) {
		var data = [],
			latest;
	
		if (res.statusCode === 200) {
			res.on('data', function (chunk) {
				data.push(chunk);
			});
			res.on('end', function () {
				latest = JSON.parse(Buffer.concat(data).toString())['dist-tags']['latest'];
				if (latest !== pkg.version) {
					console.log('New version found');
					exec('npm install ' + pkg.name + '@' + latest, function (err) {
						if (err) {
							throw err;
						} else {
							console.log('Updated to %s', latest);
							callback();
						}
					});
				} else {
					callback();
				}
			});
		} else {
			console.error('Failed to check the new version');
		}
	});
};